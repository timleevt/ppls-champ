{"version":3,"sources":["components/RankingList.js","components/UserListForm.js","components/UserListModal.js","components/RankingLists.js","components/Header.js","components/App.js","index.js"],"names":["RankingList","state","ranking","fetchRankingList","axios","get","props","url","then","res","includes","data","property","push","setState","slice","this","prevProps","className","title","map","person","index","key","React","Component","UserListForm","boxrecList","renderRankSelectOption","boxerOptions","boxer","unshift","value","hidden","disabled","renderRankSelect","rankSelectList","i","defaultValue","name","required","onNewUserListFormSubmit","e","preventDefault","newUserListObj","FormData","target","duplicates_exist","entries","pair","selectContainer","document","getElementsByName","parentElement","classList","remove","Object","values","indexOf","add","getElementById","style","visibility","post","console","log","onNewUserSubmit","catch","err","onLoadUserSubmit","getAll","rankings","sort","onSubmit","type","placeholder","id","onClick","toggleModal","UserListModal","show","aria-label","RankingLists","showUserListModal","mylist","mylistURL","renderRankLists","Fragment","val","userID","Header","App","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.cf1f52bd.chunk.js","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\nclass RankingList extends React.Component {\r\n    state = {\r\n        ranking: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchRankingList();\r\n    }\r\n      \r\n    componentDidUpdate(prevProps) {\r\n        // Compare props to check for change\r\n        if (this.props.url !== prevProps.url) {\r\n            this.fetchRankingList();\r\n        }\r\n    }\r\n\r\n    fetchRankingList = () => {\r\n        axios.get(`/${this.props.url}`)\r\n          .then(res => {\r\n            //Handle user generated lists\r\n            if(this.props.url.includes(\"userlist\")) {\r\n                let data = res.data;\r\n                const ranking = [];\r\n                for (const property in data) {\r\n                    if(property.includes(\"rank\")) {\r\n                        ranking.push(data[property]);\r\n                    }\r\n                }\r\n                this.setState({ ranking });\r\n            } else {\r\n            // Handle pre-made ranking list responses\r\n                const ranking = res.data.slice(0,10);\r\n                this.setState({ ranking });\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content\">\r\n                <h4>{this.props.title}</h4>\r\n                <ol>\r\n                    {this.state.ranking.map((person,index) => <li key={index}>{person}</li>)}\r\n                </ol>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RankingList;","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nclass UserListForm extends React.Component {\r\n    state = {\r\n        boxrecList: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        /* Fetch ranking list from url and save the first 10 into state */\r\n        axios.get(`/rankings/boxrec`)\r\n          .then(res => {\r\n            const rankings = res.data;\r\n            rankings.sort();\r\n            this.setState({ boxrecList: rankings });\r\n        })\r\n\r\n        document.getElementById('test-hidden').style.visibility = \"hidden\";\r\n      }\r\n    \r\n    // Iterates through the state.boxrecList item and returns the HTML \"option\" tag with each of the values\r\n    renderRankSelectOption = () => {\r\n        if(this.state.boxrecList) {\r\n            let boxerOptions = this.state.boxrecList.map((boxer, index) => <option key={index}>{boxer}</option>);\r\n            boxerOptions.unshift(<option key=\"default-select\" value =\"DEFAULT\" hidden disabled>Select</option>);\r\n            return boxerOptions;\r\n        }\r\n    }\r\n\r\n    // Renders the 10 Select boxes on the screen\r\n    renderRankSelect = () => {\r\n        if(this.state.boxrecList) {\r\n            const rankSelectList = []\r\n            for(let i = 1; i <= 10; i++) {\r\n                rankSelectList.push(\r\n                    <div key={i} className=\"field is-horizontal\">\r\n                        <div className=\"field-label is-normal\">\r\n                            <label className=\"label\">Rank #{i}</label>\r\n                        </div>\r\n                        <div className=\"field-body\">\r\n                            <div className=\"field\">\r\n                                <div className=\"control\">\r\n                                    <div className=\"select\">\r\n                                        <select defaultValue={'DEFAULT'} name={`rank_${i}`} required>{this.renderRankSelectOption()}</select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            return rankSelectList;\r\n        }\r\n        return <div>Loading..</div>\r\n    }\r\n\r\n    // Handles submission of a new user list\r\n    onNewUserListFormSubmit = e => {\r\n        e.preventDefault();\r\n        let newUserListObj = {}\r\n        const data = new FormData(e.target);\r\n        let duplicates_exist = false;\r\n        \r\n        for(var pair of data.entries()) {\r\n            let selectContainer = document.getElementsByName(pair[0])[0].parentElement;\r\n\r\n            // Clean up form to clear duplicate warnings if they exist\r\n            selectContainer.classList.remove('is-danger');\r\n\r\n            // Flag any duplicates and return without making the request if found\r\n            if (Object.values(newUserListObj).indexOf(pair[1]) > -1) {\r\n                selectContainer.classList.add('is-danger');\r\n                duplicates_exist = true;\r\n            }\r\n            newUserListObj[pair[0]] = pair[1];\r\n        }\r\n        if(duplicates_exist) { \r\n            document.getElementById('test-hidden').style.visibility = \"visible\";\r\n            return;\r\n        } else {\r\n            // Send the post request to the backend\r\n            axios.post(`/userlist`,\r\n                newUserListObj\r\n            )\r\n            .then(res => {\r\n                console.log(res);\r\n                this.props.onNewUserSubmit(newUserListObj[\"userID\"]);\r\n            })\r\n            .catch(err =>{\r\n                console.log(err);\r\n            }) \r\n        }\r\n    }\r\n\r\n    // Handles loading of existing user list\r\n    onLoadUserSubmit = (e) => {\r\n        e.preventDefault();\r\n        const data = new FormData(e.target);\r\n        this.props.onLoadUserSubmit(e, data.getAll(\"userID\")[0]);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"field\">\r\n                {/* Form for loading already existing list */}\r\n                <form onSubmit={this.onLoadUserSubmit}>\r\n                    <p className=\"help\">Have a list already? Load it here</p>\r\n                    <div className=\"field has-addons\">\r\n                        <div className=\"control is-expanded\">\r\n                            <input name=\"userID\" className=\"input\" type=\"text\" placeholder=\"User ID\" />\r\n                        </div>\r\n                        <div className=\"control\">\r\n                            <button className=\"button is-link\">Load</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n                <hr />\r\n                \r\n                {/* Form for new list creation */}\r\n                <form onSubmit={this.onNewUserListFormSubmit}>\r\n                    <div className=\"field\">\r\n                        <label className=\"label\">Create your list</label>\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <input name=\"userID\" className=\"input\" type=\"text\" placeholder=\"User ID\" required/>\r\n                    </div>\r\n                    \r\n                    <div id=\"rank-select-container\" className=\"field\">\r\n                        {this.renderRankSelect()}\r\n                        <p id=\"test-hidden\" className=\"help is-danger\">Invalid input: duplicate entry</p>\r\n                    </div>\r\n                    \r\n                    <div className=\"field is-grouped\">\r\n                        <div className=\"control\">\r\n                            <button className=\"button is-link\">Submit</button>\r\n                        </div>\r\n                        <div className=\"control\">\r\n                            <button onClick={this.props.toggleModal} className=\"button is-link is-light\">Cancel</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserListForm;","import React from 'react';\r\n\r\nimport UserListForm from './UserListForm';\r\n\r\nclass UserListModal extends React.Component {\r\n    render() {\r\n        if(!this.props.show) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div className=\"modal is-active\">\r\n                <div className=\"modal-background\"></div>\r\n                <div className=\"modal-content\">\r\n                    <div className=\"box\">\r\n                        <UserListForm key=\"user-list-form\" onLoadUserSubmit={this.props.onLoadUserSubmit} toggleModal={this.props.toggleModal} onNewUserSubmit={this.props.onNewUserSubmit}/> \r\n                    </div>\r\n                </div>\r\n                <button className=\"modal-close is-large\" aria-label=\"close\" onClick={this.props.toggleModal}></button>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default UserListModal;","import React from 'react';\r\n\r\nimport RankingList from './RankingList';\r\nimport UserListModal from './UserListModal';\r\n\r\nimport './RankingLists.css';\r\n\r\n\r\nclass RankingLists extends React.Component {\r\n    state = {\r\n        showUserListModal: false,\r\n        mylist: null,\r\n        mylistURL: null\r\n    }\r\n\r\n    renderRankLists = () => {\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.mylist && <div className=\"rank-list column\"><RankingList key=\"ml\" title={this.state.mylist} url={this.state.mylistURL}/></div>}\r\n                <div className=\"rank-list column\"><RankingList key=\"tpc\" title=\"The People's Champ\" url=\"community\"/></div>\r\n                <div className=\"rank-list column\"><RankingList key=\"br\" title=\"Boxrec\" url=\"rankings/boxrec\"/></div>\r\n                <div className=\"rank-list column\"><RankingList key=\"tbrb\" title=\"TBRB\" url=\"rankings/tbrb\"/></div>\r\n                <div className=\"rank-list column\"><RankingList key=\"ring\" title=\"The Ring\" url=\"rankings/thering\"/></div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    toggleModal = (e) => {\r\n        e.preventDefault();\r\n        this.setState({showUserListModal: !this.state.showUserListModal});\r\n    }\r\n\r\n    onLoadUserSubmit = (e, val) => {\r\n        e.preventDefault();\r\n        this.setState({ \r\n            mylist: `${val}'s list`,\r\n            mylistURL: `userlist/${val}`,\r\n            showUserListModal: false\r\n        });\r\n    }\r\n\r\n    onNewUserSubmit = (userID) => {\r\n        this.setState({ \r\n            mylist: `${userID}'s list`,\r\n            mylistURL: `userlist/${userID}`,\r\n            showUserListModal: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"is-centered\">\r\n                <div className=\"columns\">\r\n                    {this.renderRankLists()}\r\n                </div>\r\n                <div>\r\n                    <button className=\"button is-large is-info is-fullwidth\" onClick={this.toggleModal}>\r\n                        Create/Load your own list!\r\n                    </button>\r\n                </div>\r\n                <UserListModal show={this.state.showUserListModal} toggleModal={this.toggleModal} onLoadUserSubmit={this.onLoadUserSubmit} onNewUserSubmit={this.onNewUserSubmit}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RankingLists;","import React from 'react';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"container content\" >\r\n            <div className=\"level is-mobile \">\r\n                <h1 className=\"is-large\">The People's Champ</h1>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\n\nimport RankingLists from './RankingLists';\nimport Header from './Header';\n\nclass App extends React.Component {\n    render() {\n        return (\n            <div className=\"container\">\n              <Header />\n              <RankingLists />\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nimport './../node_modules/bulma/css/bulma.css';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}